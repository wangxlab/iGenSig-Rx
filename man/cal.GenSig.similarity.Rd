% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iGenSigRx_Modules.R
\name{cal.GenSig.similarity}
\alias{cal.GenSig.similarity}
\title{Title calculate GenSig scores based on binary clinical feature}
\usage{
cal.GenSig.similarity(
  target.list,
  feature.list,
  feature.select = NULL,
  trainset,
  preCalmatrix = NULL,
  TCGA.feature.list,
  weight.preCal = NULL,
  minsize = 10,
  weight.cut,
  low.weight.cut = 0.05,
  p.cut = NULL,
  low.p.cut = 1,
  power = 1,
  root = 0.5,
  ECNpenalty = 1,
  method = c("logistic.regression", "pearson", "phi", "ochiai", "jaccard"),
  redun.method = "ochiai",
  redun.cut = 0.1,
  rm.overfit = FALSE,
  rm.equivocal = TRUE,
  normalize.GenSig = TRUE,
  highlevel.minsize = 10,
  confound.factor = confound.factor,
  gensig.model = NULL
)
}
\arguments{
\item{target.list}{target sample list}

\item{feature.list}{target feature list}

\item{feature.select}{selected features}

\item{trainset}{trainset data}

\item{preCalmatrix}{pre-calculated matrix}

\item{TCGA.feature.list}{TCGA feature list}

\item{weight.preCal}{weight of preCal matrix}

\item{minsize}{minimum size}

\item{weight.cut}{weight cutoff}

\item{low.weight.cut}{low weight cutoff}

\item{p.cut}{p cutoff}

\item{low.p.cut}{low p cutoff}

\item{power}{power in iGenSig-Rx formula}

\item{root}{root in iGenSig-Rx formula}

\item{ECNpenalty}{ECNpenalty in iGenSig-Rx formula}

\item{method}{weight calculation method}

\item{redun.method}{redundancy removing method}

\item{redun.cut}{redundancy cutoff}

\item{rm.overfit}{removing overfit}

\item{rm.equivocal}{removing equivocal features}

\item{normalize.GenSig}{normalizing GenSig scores}

\item{highlevel.minsize}{minimum size for high level features}

\item{confound.factor}{confounding factors}

\item{gensig.model}{model of iGenSig}
}
\value{
Weight and iGenSig results
}
\description{
Title calculate GenSig scores based on binary clinical feature
}
\examples{
cal.GenSig.similarity(target.list,feature.list,feature.select=NULL,trainset,preCalmatrix=NULL,TCGA.feature.list,weight.preCal=NULL,minsize=10,weight.cut, low.weight.cut=0.05,p.cut=NULL,low.p.cut=1,power=1,root=0.5,ECNpenalty=1,method=c("logistic.regression","pearson","phi","ochiai","jaccard"), redun.method="ochiai",redun.cut=0.1,rm.overfit=FALSE,rm.equivocal=TRUE,normalize.GenSig=TRUE,highlevel.minsize=10,confound.factor=confound.factor,gensig.model=NULL)
}
